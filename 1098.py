# 문제
# 1098 : [기초-종합+배열] 설탕과자 뽑기
# 시간 제한: 1 Sec  메모리 제한: 128 MB
# 제출: 20611  해결 문제 수: 7488

# 문제 설명    
# 아버지와 함께 유원지에 놀러간 경곽이는 설탕과자(설탕을 녹여 물고기 등의 모양을 만든 것) 뽑기를 보게 되었다.

# 길이가 다른 몇 개의 막대를 바둑판과 같은 격자 판에 놓는데,

# 격자 판에 적혀있는 설탕과자 이름(잉어, 붕어, 용 등 여러 가지가 가로 또는 세로로 연달아 적혀있다.)을 가리면,

# 그 설탕과자를 가져가는 사행성? 게임이었다.

# 가장 큰 설탕과자를 따볼까? 생각한 경곽이는

# 격자판에 막대기를 놓는 모든 방법을 살펴본 후 가장 큰 설탕과자를 얻을 수 있는 방법을 알아내기 위해

# 격자판에 막대기를 놓는 기본적인 상황을 바둑판에 바둑알 놓기처럼 만들어보고자 하였다.

# 격자판의 세로(h), 가로(w), 막대의 개수(n)와 각 막대의 길이(l), 막대를 놓는 방향(d: 가로는 0, 세로는 1)과 막대를 놓는 막대의 가장 왼쪽 또는 위쪽의 위치(x, y)가 주어질 때, 격자판을 채운 막대의 모양을 출력하는 프로그램을 만들어보자.

# 입력
# 첫 줄에 격자판의 세로(h), 가로(w)가 공백을 두고 입력되고,

# 두 번째 줄에 놓을 수 있는 막대의 개수(n), 각 막대의 길이(l), 방향(d), 좌표(x, y)가 입력된다.

# 입력값의 정의역은 다음과 같다.

# 1 <= w, h <= 100

# 1 <= n <= 10

# d = 0 or 1

# 1 <= x <= w

# 1 <= y <= h

# 단, 막대가 격자판을 벗어나는 경우는 입력되지 않는다.

# 출력
# 모든 막대를 놓은 격자판의 상태를 출력한다.

# 막대에 의해 가려진 경우 1, 아닌 경우 0으로 출력한다.

# 입력 예시   
# 5 5
# 3
# 2 0 1 1
# 3 1 2 3
# 4 1 2 5

# 출력 예시
# 1 1 0 0 0 
# 0 0 1 0 1 
# 0 0 1 0 1 
# 0 0 1 0 1 
# 0 0 0 0 1 

# 코드
a,b=input().split()
a=int(a)
b=int(b)
num=int(input())
baduk=[[0]*b for i in range(a)]
for i in range(0,num):
	put=input().split()
	c=int(put[2])-1
	d=int(put[3])-1
	if put[1]=='1':
		for j in range(0,int(put[0])):
			baduk[c][int(put[3])-1]=1
			c+=1
	elif put[1]=='0':
		for k in range(0,int(put[0])):
			baduk[int(put[2])-1][d]=1
			d+=1
for i in range(0,a):
	for j in range(0,b):
		print(baduk[i][j], end=' ')
	print('')
